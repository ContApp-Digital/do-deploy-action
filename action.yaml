name: "Digital Ocean Deploy"
description: "Digital Ocean kubernetes deploy"
inputs:
  branch-develop:
    required: false
    description: "Develop branch"
    default: "develop"
  branch-production:
    required: false
    description: "Production branch"
    default: "master"
  kubeconfig: 
    required: true
    description: "kubernetes b64 config"
  do-token:
    required: true
    description: "Digital Ocean access token"
  consul-http-addr:
    required: true
    description: "Consul http address"
  consul-http-token:
    required: true
    description: "Consul http token"
  registry:
    required: true
    description: "Image registry"
  image-name: 
    required: true
    description: "Name of the image to build"
  image-tag:
    required: true
    default: "latest"
    description: "Image tag"
  kube-resource:
    required: false
    description: "Kubernetes resources to rollout"
  kube-namespace:
    required: false
    default: "default"
    description: "Kubernetes default namespace"
runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Environment
      shell: bash
      run: |-
        if [ ${{ github.event_name }} == "pull_request" ]; then 
          branch=$(echo ${{ github.base_ref }}  | tr / -)
        else 
          branch=$(echo ${GITHUB_REF#refs/heads/} | tr / -)
        fi
        if [ $branch = ${{inputs.branch-production}} ]; then 
          env="production";
          consulenv="production";
        elif [ $branch = ${{inputs.branch-develop}} ]; then 
          env="develop";
          consulenv="develop";
        else 
          env="develop";
          consulenv="develop";
        fi
        echo "ENV=$(echo $env)" >> $GITHUB_ENV
        echo "CONSULENV=$(echo $consulenv)" >> $GITHUB_ENV

    - name: Build image
      shell: bash
      run: docker build . --build-arg NODE_ENV=${{ env.CONSULENV }}  --build-arg CONSUL_HTTP_ADDR=${{ inputs.consul-http-addr }} --build-arg CONSUL_HTTP_TOKEN=${{ inputs.consul-http-token }} -t ${{inputs.image-name}} .

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ inputs.do-token }}

    - name: Log in to DO Container Registry
      shell: bash
      run: doctl registry login --expiry-seconds 600

    - name: Tag image
      shell: bash
      run:
        docker tag ${{inputs.image-name}} ${{inputs.registry}}/${{inputs.image-name}}:${{inputs.image-tag}}

    - name: Push image to Container Registry
      shell: bash
      run: docker push  ${{inputs.registry}}/${{inputs.image-name}}:${{inputs.image-tag}}

    - name: Execute rollout
      if: ${{inputs.kubeconfig && inputs.kube-resource}}
      uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ inputs.kubeconfig }}
      with:
        args: -n ${{inputs.kube-namespace}} rollout restart ${{inputs.kube-resource}}